{"m_szDocID":"1690716","m_szDocTitle":"Nitesh Dhanjani","m_szYear":"2013","m_szDocSumamry":"textArticle -------------------- Nitesh Dhanjani Thoughts on Information Security, Technology, and Science February 10, 2016 Blackouts, Freakouts, and Stakeouts   My most recent book, Abusing the Internet of Things: Blackouts, Freakouts, and Stakeouts , has been reviewed by the awesome Cory Doctorow at BoingBoing : “The book is written in a spritely, writerly fashion, with many grace notes and interesting case studies -- including an account of how you could use someone's hacked email account to steal their Tesla automobile. This book is a marvelous thing: an important intervention in the poli","m_szDocBody":"nitesh dhanjani thought information security technology science blackout freakout stakeout recent book abusing internet thing blackout freakout stakeout reviewed awesome cory doctorow boingboing book written spritely writerly fashion grace note interesting case study including account someone hacked account steal tesla automobile book marvellous thing important intervention policy debate information security practical people improve situation honoured cory review hereare description chapter chapter light outhacking wireless lightbulb sustained blackout book begin deep dive design architecture popular iot product market philip hue personal lighting system chapter present security issue system including fundamental concern security possibility malware abusing weak authorization mechanism sustained blackout discuss complexity internetworking online space such facebook iot device lead security issue spanning multiple platform chapter electronic lock pickingabusing door lock compromise physical security chapter take security vulnerability surrounding existing electronic door lock wireless mechanism integration mobile device actual case study attacker exploited issue conduct robbery chapter assaulting radio nursebreaching baby monitor security defect remotely controllable baby monitor covered chapter detail actual vulnerability abused attacker show simple design aws put safety family risk chapter blurred lineswhen physical space meet virtual space company smartthing sell suite iot device sensor leveraged protect home receiving notification potential intruder main door home opened midnight fact device internet operate increased dependency network connectivity blurring line physical world cyber world security smartthing suite product explore designed securely operate device manufacturer chapter idiot boxattacking smart television television today essentially computer running powerful operating system linux connect home wifi network support service watching streaming video videoconferencing social networking instant messaging chapter study actual vulnerability samsung branded tvs understand root flaw potential impact privacy safety chapter connected car security analysisfrom gas fully electric car accessible controllable remotely unlike device interconnectedness car serve important safety function security vulnerability car lead loss live chapter study lowrange wireless system review extensive research performed leading expert academia analyse discuss feature found tesla model sedan including way security car improved chapter secure prototypinglittlebit cloudbit order business designing iot product create prototype make idea feasible explore alternative design concept develop specification build solid business case extremely important design security initial prototype subsequent iteration final product security afterthought bound lead finished product put safety privacy consumer risk chapter prototype sms doorbell littlebit prototyping platform cloudbit module help provide remote wireless connectivity prototype iot idea send sms message doorbell pressed discussion prototype step security issue requirement considered designing prototype discuss important security consideration addressed product designer chapter securely enabling futurea conversation upcoming attack vector year dependence iot device live bound skyrocket chapter predict plausible scenarios attack based understanding iot device serve future chapter scenariosintention outcome chapter hypothetical scenarios gain good appreciation people influence security incident scenario explore executive large corporation attempt leverage buzz surrounding topic iot security intention impressing board director scenario upandcoming iot service provider choose engage respond researcher journalist intention preserving integrity business goal chapter illustrate that ultimately consequence securityrelated scenarios heavily influenced intention action people involved posted book security permalink this downloaded form cursory evaluation tesla model protect car protect workstation innovation teslas electric vehicle set direction sustainable future elon musk tesla spacex inspirational triumph humankind fantastic future iot internet thing device ahead responsibility security community device manufacturer enable device securely iot device scope include remotely controllable thermostat baby monitor light bulb door lock car more impact security vulnerability targeting device lead physical nature addition contributing loss privacy purpose document outline mechanism tesla model communicate car owner tesla infrastructure variety mechanism goal document advise owner security issue aware kick dialogue security researcher tesla motor ultimately drive deeper analysis assurance tesla model tesla model configurable option kwh battery mile range horseposer kwh battery mile range horsepower pwh battery mile range horsepower performance model also configurable performance handling figure tesla model tesla model fully electric addition charge station metro areas alsobe charged free for life tesla supercharging station centre display centre display depicted popular feature car display let control media navigation turn rear camera let adjust suspension open panoramic roof lock unlock door adjust hight breaking vehicle touch screen tesla model innovative product section preliminary security issue helpful owner security researcher assist deeper level analysis threat section discuss potential security issue six character lead car located unlocked malware phishing leak order tesla model account teslas requirement requirement account character number letter figure tesla model iphone app car delivered ios app control car inclusive unlocking car checking car location charge status figure implication result design bruteforce attack tesla website doesnt account lockout policy incorrect attempt put owner risk malicious entity attempt bruteforce account gain iphone functionality phishing attack control iphone app password situation ripe potential attacker steal credential phishing attack credential gathered phisher easily cheque location car account compromised tesla rest api destination step submitting setting usersessionemail usersessionpassword parameter session token obtain vehicle list submitting requestto vehicle obtained query location vehicle submitting getrequest return location theform latitude longitude phisher obtained location vehicle mapped compromised account unlock vehicle set vehicle buy invoking loop request malware attack future generation malware pick static factor password pertaining vehicle tesla ferry botnet herder giving substantial power locating controlling unlocking car example vehicle leak user tendency reuse credential service well create situation attacker compromised major website attempt credential tesla website iphone app situation major leak daily basis attacker easily username password leak attempt tesla ios app automate process rest api locate unlock car social engineering tesla employee addition issue widely tesla owner tesla customer service ability unlock car remotely unclear consistent requirement owner verify identity clear requirement malicious entity successful social engineering tesla customer service unlock else car unclear background cheque tesla employee subject prior power unlock tesla car account compromise temporary owner reset owner password required answer secret question additional information expensive car tesla model physical consequence theft material inside car recommended owner protect account setting separate gmail account tied service enable factor auth link gmail address tesla profile positive note noted tesla website incorporate anticsrf tokenformtoken prevent malicious website taking user account invoking postrequest functionality let user change username tesla rest api implicitly encourage credential sharing untrusted party tesla glass tesla ios app rest api communicate send command car tesla intended api directly invoked party however party app started leverage tesla rest api build application example tesla glass application let user monitor control teslas glass order setup application glass owner authorise add app step complete redirected shown page enter information tesla website credential collected party app shown credential teslaglassappspotcom therefore case assumed party credential invoke tesla rest api behalf user lead risk owner malicious party application application owner abuse situation collect credential tesla account insecure design party infrastructure party infrastructure compromised malicious intruder collect tesla user credential abuse remote functionality raised community george reese elon musk confirmed tesla plan eventually release sdk party developer tesla sponsored solution include sdk remote api local sandbox oauth authorization functionality vetting process draw inspiration apple app store meanwhile tesla owner strongly encouraged party application potential low hanging fruit tesla connect outbound hop local wifi capture outbound connexion tesla model wifi model configured wifi noted established outbound connexion openvpn protocol noted head request issued resulted badrequest response forum discussion tesla model internal network model pin connector left dashboard adapter connect laptop port user teslamotorsclubcom forum reported information internal network plugged potential centre console address service open open ssh dashboard screen address service open open ssh device address service open open telnet mac address axxxx network computing device ssh service banner sshopensshp debianubuntu dns version dnsmasq server appear expose album art displayed dashboard drxrxrx drwxrwxrwt root root drxrxrx contain drxrxrx lostfound rrr mdsumall drxrxrx sound rrr version content version directory majority data noticed plugging connector appear broadcast udp packet car status information potential implication low hanging fruit outgoing connexion openvpn configured preshared key username based certificate interesting internal filesystem information located information obtained potential intruder count test internal network infrastructure openvpn endpoint integrity software update performed unclear udp broadcast data abused comply car setting potentially dangerous override safety precaution the exposure raw internal network plugging appear dangerous case malicious valet service abuse temporary physical access conclusion based issue outlined document takeaway point tesla address static password low complexity requirement tesla owner aware risk based current situation precaution outlined document tesla announce sdk method outline sandbox application user refrain party application forum discussion referred low hanging fruit section fascinating clear tesla owner engage open dialogue assured tesla security architecture utilised secure car analogous apple imessage infrastructure secured put personal corporate user ease tesla model great car fantastic product innovation owner tesla car increasingly relying information security protect physical safety loved belonging nature topic attempt secure vehicle attempted secure workstation home past relying static password trusted network implication physical security privacy context raised stake level tesla demonstrated innovation leap car manufacturer hoped document encourage owner deeply part tesla open dialogue owner security seriously posted security permalink belkin wemo baby monitor wemo switch wifi netcam decade weve accepted idea perimeter strategy security ineffective endpoint strive protect stack rely network segment completely trust worthy however notion permeated corporate space emergency such businesse struggling implementing control area legacy flat network operating system design residence implicit notion control network address translation nat arent immediately perspective cost complexity emergence internet iot dramatically change notion belkin wemo baby monitor wemo switch wifi netcam point illustrated reconsidering perimeter security pdf security design belkin wemo baby monitor wemo wireless switch netcam wifi camera lon seidman review wemo baby monitor case baby monitor glaring design onetime local wifi monitor installed listen authentication continue listen remotely called buy amazon reviewer lon seidman review titled poor security ios background task reliable child safety but plaguing device poor security model leave wemo open unwelcome monitoring wemo ios device network connect listen password bad enough iphone connected local network tune monitor world demonstration wemo baby app concern demonstrated sediman point video above paper technical detail demonstration malware turning wemo switch case wemo switch found local device turn additional authorization paper describe write script this belkin netcam send credential cleartext remote server belkin netcam ssl require login local wifi however shown manage send credential clear remote server enable local malware server path isp capture credential spy camera owner upcoming revolution automation home selfinstallable iot device candidate discussed detailed illustration example secure future asserting iot device supporting application responsibility protecting user privacy security requiring setup strong wifi password iot device manufacturer lay foundation strong security architecture usable easily susceptible device network time compromised device home network lead loss financial information personal information iot device vendor continue approach depending local home network device completely secure live world compromised device result gross remote violation privacy physical security customer download hacking lightbulb security evaluation philip hue personal wireless lighting system phenomenon internet iot positively influencing live augmenting space intelligent connected device example device include lightbulb motion sensor door lock video cameras thermostat power outlet average household teenage children roughly internet connected device estimate organisation economic cooperation development starting increasingly depend iot device promote automation increase being such important begin dialogue securely enable upcoming technology excited release security research philip hue lighting system the hue personal wireless system purchase apple store outlet box system comprise wireless led light bulb wireless bridge light bulb configured million colour hacking lightbulb security evaluation philip hue personal wireless lighting system paper discusse top threat product addition detailed analysis system work highlight vulnerability malware infected machine user internal network sustained blackout video demonstration vulnerability video above detail read pdf sample malware script hueblackoutbash found appendix goal research lighting critical physical security smart lightbulb system deployed current residential corporate construction abuse case ability intruder remotely shut lighting location hospital public venue result consequence the system easily marketplace popular installable wireless light bulb solution the architecture employ mix network protocol application interface interesting evaluate design perspective competing product deploy similar interface inheriting abuse case hue system wonderfully innovative product important understand work ultimately push forward secure enablement similar iot product cross device attack cloud sync icloud protect data mobile device mantra permeating organisation today good thing article support thought process lending evidence hypothesis cloud synchronisation service popular attack target desktop weakest link word and apple ecosystem example individual work place ios device iphone ipad desktop laptop desktop operating system osx window choice avenue attack individual increasingly relying application mobile device store private information credential financial health user icloud sync data application devicesnote icloud file sync device app installed device malware rootkit infect desktop steal influence data synced icloud illustrated rest article core icloud service provide apple icloud service offer distinct service shown set core service backup restore device sync imessage contact calendar reminder safari bookmark open tab note passbook information photos iphone feature service turned individually managed mdm mobile device management solution service utilised key kingdom user device data fully rely strength secrecy user icloud password blog post titled apple icloud thought security storage apis discuss risk addition possibility automated tool scrape credential user compromised attack and published forum avenue capture user ios device data masse icloud storage apis turned case service offered part icloud service storage apis party developer user session application data seamlessly sync device operating system feature focus writeup icloud directory goodreader app iphone icloud directory goodreader app ipad example goodreader app configured icloud manage document device iphone ipad purpose attack vector assume user macbook air compromised traditionally attacker limited data stored osx filesystem attacker wanted gain data device bet backup file however user day routinely backup ios device laptop choose utilise icloud instead situation attacker directly browse user directory application data stored app utilise icloud storage apis what attacker make file directory synced back ios device total drwxrxrx staff drwxrxrx staff rwrr staff fiscalqpdf point steal fiscalqpdf delete alter reflected user ios device second imagine implication victim whos profession financial medical military field based possibility point away desktop weakest link give rise cross device attack these future malware rootkit exploit this case ios device document sync turned attacker rootkit author advantage situation device easily compromised target popular icloud app steal data modify influence business transaction advantage developer cognizant dataflow app type data specifically credential synced device note app data sync apple core backup restore service developer mark file shouldnt synced invoking addskipbackupattributetoitematurl storing file ios bundle enterprise prepare enable sync service moment easy solution configure employee device mdm disable icloud backup document however customer employee demand enablement sync service provide seamless transition device increase productivity convergence desktop mobile operating system device pave direction argued sandbox mechanism osx draw inspiration ios sandbox architecture this summary cloud sync technology blurred line surrounding data compartmentalization organisation creating solid mobile security strategy accept reality entire ecosystem device including attack vector device account incorporated strategy easier reading download world wide developer conference san francisco steve job revealed vision apple icloud demote desktop central media hub seamlessly integrate user experience device apple icloud service comprise distinct feature provide ability backup restore device air sync osx window computer mechanism completely controlled apple free photo syncing capability feature icloud party developer leverage data storage capability app article provide initial thought icloud security perspective emphasis discuss icloud storage apis secure coding implementation angle start addressing thought backup restore component business implication device backup restore functionality starting ios iphone ipad user sync device computer wireless connexion activate device backup restore data setting icloud account thought risk opportunity arise businesse employee begin ios device icloud enabled potential mass data compromise automated tool ios device icloud enabled continuously sync data apple datacenter and cloud service apple turn leased amazon microsoft azure device perform backup day device plugged power outlet wifi this manually initiated user easy intercept traffic ios device icloud infrastructure proxy tool burp interestingly backupd process back data amazon infrastructure put snip host usncasexternalamazonawscom useragent backupd unknown version xamzdate fri gmt contenttype case device previously authenticated apple domain icloudcom applecom likely server initiated backend session amazon tied user session based filename provided put request above biggest point security perspective information protected user icloud credential authorization xmobilemeauthtoken header basic authentication base icloud backsup email calendar sms imessage browser history note application data phone log etc information goldmine adversary hypothesis future automated tool following continuously scrape compromised username service source attempt credential compromised account whose username form required icloud icloud successful credential download restore file completely compromising user information risk organisation government institution enormous malicious entity automatically download majority data individual iphone ipad user account simply gaining icloud which compromised due reuse service information security team integrate baseline policy relating icloud turn icloud backup allowcloudbackupand document synchronisation allowclouddocumentsync deploying specific configuration profile information here also mobile device management mdm vendor integrate icloud related policy setting leveraged party app ios app developed inhouse assessed security vulnerability icloud api related principle listed section icloud storage apis significant aspect icloud platform availability icloud storage apis developer apis developer write application leverage icloud wirelessly push synchronise data device icloud require ios mac osx lion operating system recently released developer busy modifying application integrate icloud apis coming month bound impressive increase number app leverage icloud section discuss initial thought securely enable ios app icloud storage apis step write simple ios app leverage icloud storage apis app create simple document user icloud container auto update document change walkthrough point secure development tip potential abuse case watch for relied ray wenderlich fantastic beginning icloud ios tutorial located walkthrough below tutorial found here creating configuring app provisioning profile icloud service step required test app icloud service app common description app development process creating app developer provisioning portal provisioning portal require pick bundle identifier reversedomain style unique string example attempt create app bundle identifier comfacebookfacebook promptly rejected official app step enable app icloud service configure app list action column next cheque enable icloud enabling app icloud select provisioning tab profile pick app created earlier select device test app note simulator icloud api deploy app actual device app configured create provisioning profile provisioning profile propertylist plist file signed apple file developer certificate code complied developer certificate allowed execute device selected profile provisioning profile loaded xcode download profile open doubleclick xcode pick shown writing simple icloud app xcode xcode create project choose single application template enter dox product company identifier creating app device family universal automatic reference counting option checked option unchecked creating sample icloud project xcode next select project project navigator select dox target onsummary entitlement section project entitlement icloud default screenshot dont change anything open appdelegatem add code bottom applicationdidfinishlaunchingwithoption before return yes document data icloud setting turned assume test device document data preference icloud set off case run project now log notice shown app unable icloud container instance document data setting turned log notice similar icloud directory local device notice url returned local file container icloud daemon running ios device and osx automatically synchronise information user put directory user icloud device osx lion icloud file created ios directory point ill turn ray wenderlich icloud tutorial referenced earlier part part you stop end setting interface tutorial here video demonstration sample icloud app done deploy app separate ios device watch sync icloud embedded video demonstrate app action security consideration list security consideration managing risk pertaining icloud storage apis guard credential apple developer account important safeguard apple developer account credential make credential complex prevent potential brute forcing developer account release app bundle seed discussed below accesse user icloud container ferry information attacker bundle seed constrain local icloud directory local directory form bundle idicloud container specific entitlement app multiple container multiple directory entitlement form bundle seed constrained provisioning profile entitlement setting visible xcode change value comappledeveloperubiquitycontaineridentifier comappledeveloperubiquitykvstoreidentifier entitlement setting visible xcode begin provisioning profile xcode complain shown xcode error invalid entitlement clear apple bundle seed team constrain data icloud organizationsas discussed earlier apple provisioning portal provisioning profile else team write app locally user icloud data local icloud file mapping coincide store critical information icloud container including session data icloud data stored locally synced icloud infrastructure user multiple device iphone ipod touch ipad macbook imac icloud data automatically synced device malicious entity temporarily gain filesystem physical implanting malware gain icloud local container ios osx good idea store critical information session token password financial healthcare data personally identifiable trust data icloud commit critical transaction discussed prior paragraph attacker temporary user file system icloud document stored locally note attacker edit add file icloud container synced device sample medical app leverage icloud store patient data assume hospital deploy icloud enabled medical app doctor screenshot attacker gain doctor macbook air running osx example local filesystem cat allergiestxt tiff attacker issued command above doctor icloud container updated modified information device example attacker altered patient record remove listed allergy replace xray image updated medical record intruder gain temporary doctor macbook air doctor updated record medical app accessed attacker make doctor macbook air figure store file document directory user delete individual file icloud account stored document directory nsurl ubiquitouspackage ubiq urlbyappendingpathcomponent urlbyappendingpathcomponentkfilename file treated data deleted once user notify bug application causing data written icloud exhaust user storage quotas create denial service condition care handle conflict appropriately document edited multiple device conflict depending logic application code important make handle conflict integrity user data preserved understand apple capability user icloud data data local device icloud infrastructure encrypted transmit however note apple capability user data low probability apple choose depending business regulatory legal issue prohibit storage data icloud ios sandboxing vulnerability exploited rogue app putting string urlbyappendingpathcomponent editing container identifier entitlement special character note ios trap attempt runtime replace special character app break local icloud directory vulnerability ios sandboxing file parsing mechanism leverage build rogue app app icloud data security principle apply keyvalue data storage icloud storage apis storage keyvalue data addition document security tip outlined apply keyvalue storage apis watch icloud backup presented earlier section choose backup phone data icloud include portion app sandbox note document folder created part icloud container part application bundle critical information preserve move leverage addskipbackupattributetoitematurl method identify specific directory backed hope contained information organisation security issue principle surrounding icloud ultimate goal enable technology cognizant risk feel free touch comment question suggestion presented age application attack apple ios blackhat barcelona whitepaper talk available download url whitepaper bring emerging research illustrate netnew attack vector targeting ios application intended audience rest paper include technical security analyst ios application developer topic discussed detail protocol handling attack secure design interface attack practise abusing securely design apple push notification man middle attack privacy leak identity decloaking countermeasure addition topic appendix whitepaper checklist item assessing ios application list include traditional application security weaknesse apply ios additional item consider data protection file encryption applicable ios device presented appendix trust information paper valuable actionable question feedback feel free contact posted apple conference security security conference permalink apple ios push notification security implication abuse scenarios countermeasure million ios user developer rely apple push notification service apn article briefly introduce detail apn work scenarios insecure implementation abused malicious party apple ios task execute background switches app back home screen app return resume frozen state left off apple implementation help preserve battery life providing illusion ios fullfledged multitasking party app setup make hard app implement feature rely fullfledged multitasking example instant messaging app alert incoming message app enable functionality apn service app vendor push notification user device app frozen state app home screen badge alert notification ios type push notification ios alert badge sound show screenshot illustrating alert badge notification ios device maintain persistent connexion apn server provider party app vendor connect apn route notification target device app developer implement push notification explicit detail recommend apple excellent local push notification programming guide however briefly cover step emphasis step interesting security implication tie abuse case recommendation create app apple ios provisioning portal step require developer account straightforward app ids provisioning portal select app next enter description field describe app bundle seed signify multiple app share keychain store bundle identifier interesting enter unique identifier app apple recommend reversedomain style string this ios provisioning portal reject comfacebookfacebook bundle identifier bundle identifier significant security perspective make provider certificate create also referred topic apn trust field certificate app target user device convey push message illustrate attempt create app bundle identifier comfacebookfacebook promptly refused duplicate popular ios app certificate therefore malicious entity bypass provisioning portal restriction allowing existing bundle identifier possibly influence apple provision certificate abused send push notification user app but malicious target user devicetoken discussed article create certificate signing request csr apple generate apn certificate step keychain desktop generate public private cryptographic key pair private key stay desktop public key included csr uploaded apple apn certificate apple back specific app tied specific app generated step create provisioning profile deploy app test ios device push notification enabled app selected step pretty straight forward apple documentation linked above export apn certificate server side apple documentation choose export certificate pem format certificate server side app infrastructure connect apn send push notification targeted device code ios application respond notification ios app device which turn register apn receive notification place applicationdidfinishlaunching example uiapplication sharedapplicationregisterforremotenotificationtypesuiremotenotificationtypebadge uiremotenotificationtypesound code make device initiate registration process apn succeed didregisterforremotenotificationswithdevicetoken application delegate invoked const void devtokenbyte devtoken byte selfregistered yes notice delegate passed devicetoken token udid identifier specific hardwarethe devicetoken specific instance ios installation migrate device restore backup itune device interesting note devicetoken static app specific ios instance devicetoken returned app send push notification sendproviderdevicetoken method send devicetoken provider server side implementation provider apn device send targeted push notification case application running ios device receive remote push notification apn destined app didfinishlaunchingwithoption delegate invoked message payload passed case handle process notification method app running didreceiveremotenotification method called you cheque applicationstate property application active background handle event accordingly implement provider communication apn provider key obtained step implement server side code send push notification user enhanced notification format push notification payload illustrated devicetoken specific send notification this token captured device invoking implementation sendproviderdevicetoken method step identifier arbitrary identify notification you correlate errorresponse apple documentation detail actual payload json format established detail implementing pushnotification custom app let discuss applicable security practise abuse case send company confidential data intellectual property message payload end point apn architecture tls encrypted apple data cleartext legal ramification disclosing type information thirdparty apple bet apple they wouldnt liability push delivery guaranteed dont depend critical notification apple state apn service besteffort delivery rely push critical notification shown push architecture relied critical notification addition iphone connected cellular data phone low signal receive push notification display specific period wifi automatically turned preserve battery push notification handler modify data application delete data result application launching response notification important situation push notification arrive device locked application immediately invoked handle pushed payload unlock device case app intended perform transaction result modification data validate outgoing connexion apn root certificate authority apple certificate entrust make entrust root certificate verify outgoing connexion server side architecture legitimate apn server rogue entity careful unmanaged code careful memory management perform strict bound checking constructing provider payload outbound apn memory handling api unmanaged programming language example memcpy store ssl certificate list devicetoken webroot instance organisation inadvertently exposed apple signed apn certificate private key devicetoken webroot screenshot apn certificate devicetoken exposed illustration real screenshot ios application vendor inadvertently exposing apn certificate php script list devicetoken customer scenario depicting rogue push notification targeting cnn app provider certificate compromised abuse case malicious entity certificate list devicetoken send arbitrary push notification ios application vendor customer see example jpozapn ruby gem send concurrent rogue notification end highly recommend protecting cert passphrase assumed null example sample server side code passphrase embedded webroot fact good reason information reside host accessible internet incoming provider connexion apn outbound only feel apple good job thinking security control apply apn architecture hope suggestion make apn implementation app architecture secure potential abuse posted apple security permalink secure coding iphone ipad app mitm ios application connect server side resource protect userdata eavesdropped ios application ssl encrypt connexion article sample objectivec code illustrate http connexion established locate insecure code leave ios application vulnerable man middle attack discuss configure ios device interception traffic proxy testing purpose simple app nsurlconnection easiest initiate request ios utilise nsurlconnection class sample code simple application take url editbox make request display html obtained please note code apple wonderful tutorial nsurlconnection this ibaction fire type url presse ibaction urlbarreturnidsender htmloutput uitextview display html urlbar uitextfield url load nsurlrequest therequestnsurlrequest requestwithurlnsurl urlwithstringurlbartext cachepolicynsurlrequestuseprotocolcachepolicy nsurlconnection theconnectionnsurlconnection alloc initwithrequesttherequest delegateself receiveddata type nsmutabledata receiveddata setlength nsstring tempstring nsstring alloc initwithdatadata encodingnsutfstringencoding htmloutputtext nsstring htmloutputtextnsstring failed error localizeddescription error userinfo objectforkeynsurlerrorfailingurlstringerrorkey received byte datareceiveddata length result simple ios application fetches html code url figure simple ios app nsurlconnection fetch html url screenshot above notice target url http nsurlconnection seamlessly establishes ssl connexion fetches data reviewing source code ios application organisation locate security issue make sense analyse code nsurlconnection make understand connexion inititated input utilised construct connexion request ssl not watch nsurl general include invocation object type nshttpcookie nshttpcookiestorage nshttpurlresponse nsurlcredential nsurldownload etc man middle addresse bound host browse browser show warning due fact common field ssl certificate presented server match hostdomain component url figure safari ios warning due mismatch common field certificate presented screenshot above safari ios warning situation common mismatches certificate signed recognised certificate authority sign man middle attempt malicious party network segment network route destination figure nsurlconnection connectiondidfailwitherror delegate invoked throw similar warning screenshot show attempt browse sample app discussed ealier connectiondidfailwitherror delegate called indicating error case warn risk terminate fantastic kudos apple thinking security implication presenting warning message via nserror unfortunately common application developer override protection reason example test environment valid certificate code make production code override protection outright challengesender usecredentialnsurlcredential credentialfortrustchallengeprotectionspaceservertrust forauthenticationchallengechallenge detail code stackoverflow post private method nsurlrequest called setallowsanyhttpscertificateforhost override ssl warning app app store approval process apple prohibit invocation private api responsible reviewing organisation ios code security vulnerability highly recommend watch dangerous design decision put client data company data risk intercepting http traffic proxy part performing security testing application intercept traffic invoked application application nsurlconnection implementation asis reject local proxy selfsigned certificate terminate connexion easily implanting proxy selfsigned certificate trusted certificate ios device note loophole precaution mentioned above case physical device legitimately implatining selfsigned certificate burp proxy charle proxy place selfsigned cert location browse instruction burp proxy instruction charle proxy ios device simulator setup selfsigned certificate proxy intercept http connexion terminate fuzzing analysing testing ios application security issue posted permalink comment spoofing safari iphone note appear guest post san application security blog popular web browser today arbitrary website modify displayed address bar hide address bar some browser popup hide address bar case url displayed window reasoning behaviour simple browser influenced arbitrary web application hide url modify displayed malicious web application spoof interface element display arbitrary url tricking thinking browsing trusted site call attention behaviour safari iphone proof concept demo iphone browse demo eye address bar iphone available video image detailing issue figure image left illustrate rendered display fake url bar real url bar hidden above image illustrate real url bar visible scroll notice address bar stay visible render immediately disappear rendered give time notice reliable control and dont apple intended contact apple aware implication address issue main thought behaviour outlined below precious screen real estate mobile device primaryreason address bar disappear load iphone note iphone website follow directive html advertise mobile site see source indexhtml demo example address bar safari occupy considerable real estate apple displaying scrolling current domain universal status bar carrier time stamp positioning current domain context location unalterable rendered web provide user similar indication browser chrome provide highlighting current domain rendered consequence full screen app ios uiwebviewdesktopoperating system launch default web browser choice http handler invoked this case operating system provide interface element render web application however case ios application fullscreen interest application designer user immersed application yanking safari render web content situation vital ios provide consistency ultimately assured domain web rendered from render web application developer invoke uiwebview class simple invoking line code webview loadrequestrequestobj requestobj url render figure app rendering web ipad screenshot illustrate webcontent rendered fantastic app ipad create screenshot launched app ipad selected tweet clicked url tweet notice url actual rendered seen case clear developer ios application make display ultimate domain rending web content addition default behaviour part uiwebview display current domain context designated consistent location rampant phishing malware attempt day hope apple choose arbitrary web application scroll real safari address bar view case application utilise uiwebview recommend designated screen location label accessible ios display domain web rendered serving request call uiwebview said realise precious real estate mobile device apple chose addressing issue well posted apple article security permalink comment insecure handling url scheme apple ios note appear guest post san application security blog article discuss security concern url scheme registered invoked ios url scheme apple refer them url protocol handler invoked safari browser application launch application perform transaction case isnt relevant scope discussion url scheme reference document apple list default url scheme registered ios example tel scheme launch phone application now imagine website html rendered browsing safari ios situation safari display authorization dialogue dialogue box safari requesting authorization launch phone application fantastic malicious website initiate phone call user explicit permission behaviour security perspective now assume skypeapp installed assume launched skype past application cached user credential this case user mobile device dont repeatedly enter credential unfair assumption now malicious render html case safari throw warning yank skype immediately initiate call security implication obvious including additional abuse case malicious make skypeapp call skypeid uncloak victim identity analysing victim skypeid incoming call skype automatically initiating call ios invoked malicious website contacted apple security team discuss behaviour stance onus thirdparty application such skype case authorization performing transaction contacted skype issue heard back them agree apple thirdparty application part ensuring authorization user stance leave concern unaddressed party application authorization yanked safari rogue website website client code compromised persistent xss yank safari browser application ios run fullscreen mode annoying jarring experience user party application authorization fully launched url scheme application developer alter infoplist file example section skype infoplist cfbundleurltype note jailbroken ios device obtain list url scheme application downloaded app store copy infoplist file application mac run plutil tool convert xml plutil convert xml infoplist next application implement handling message delegate example boolapplicationuiapplication application handleopenurlnsurl url perform transaction unlike case tel handler enjoy special privilege requesting authorization yanking browsing session safari party application request authorization fully launched solution apple party application option url scheme string safari prompt authorise prior launching external application apple audit security implication registered url scheme part app store approval process apple tel handler safari authorization placing phone call logical explanation behaviour apple concerned customer security doesnt rogue website place arbitrary phone call customer device however skype application abuse case succeed apple great length curate application allowing listed app store apple begin audit application security implication exposed url scheme all apple reject application pose security privacy risk user demand secure handling transaction invoked url scheme well skype example skype additional party application url scheme invoked remotely safari website comprehensive list list registered url scheme user enumerate infoplist file iphone ascertain list url scheme iphone ipad respond assuming jailbroken iphone however make sense list setting section ios user understand scheme device respond invoked arbitrary website appeal advanced user feel application designer disciplined location notification ios doe make easier enterprise party application provision employee device based badly designed url scheme place company data risk note order create registry exposed url scheme apple simply parse information infoplist initial protocol string word skype handler respond skypephoneoridcall skypephoneoridchat skype protocol listed infoplist actual parsing url performed code therefore order implement proposed registry system apple require developer disclose pattern file infoplist feel risk posed url scheme handled ios significant external source launch application interaction perform registered transaction party developer including developer create custom application enterprise use realise url handler invoked landing malicious website assume authorised apple step registration url scheme instruct safari throw authorization request prior yanking application prevalence growing popularity ios device depend apple platform personal financial healthcare data such make platform custom application ios device designed securely hope writeup helped increase awareness implement url scheme securely apple assist making happen posted apple security permalink comment healthcare data upcoming privacy conflict healthcare organisation spend hundred million dollar year struggling secure protect patient record patient traditionally demanded information secured inaccessible public regulation require due diligence ensure patient record protected addition this healthcare organisation medical data intellectual property lead business intelligence patient volunteer private medical record public domain article thought topic patientslikeme website social networking platform individual publicly share medical data including fine detail diagnosis physical condition location medication mood information benefit patientslikeme clear wonderful platform individual medical researcher statistical information disease patient connect share experience suffering similar condition security privacy len observation false sense anonymity patientslikeme website fantastic job declaring openness policy warning user information shared platform collected cached engine spent time studying profile individual affected condition that unfortunately social stigma attached them lot individual chose nickname handle real profile however mere link network analysis technique presented psychotronica sery talk quickly uncloak real identity individual that awareness effort patientslikeme individual service false sense privacy feel anonymous identity easily uncloaked stunning intelligence potential adversary clear information collected patient record adversary however sophisticated adversary correlate information found patent record online additional source social data facebook profile message blog etc combined dashboard intelligence collected piecing additional source publicly information put adversary significant advantage external entity ascertain pure medical data make judgmentcall lifestyle individual led condition addition potential abuse social engineering manipulation tactic clear business conflict healthcare organisation struggling enforce security control traditional issue internal management medical data hundred million dollar spent private healthcare organisation promote internal security effort future additional individual share medical information social media platform return control secure patient data reduce realise regulatory complication influence interesting play out summary medical benefit service patientslikeme clearhowever individual utilise service cognizant privacy security implication healthcare organisation quickly rethink stance security privacy implication social media which limited scope monitoring employee align reality upcoming social age business note interviewed kelly jackson higgin darkreading topic read additional comment here social network patient stir privacy security worry posted security social networking permalink comment behavioural economic information security continuous exponential rise complexity field information security often actual employee observed weakest link end user repeatedly found make poor security decision irrational careless placing employer significant business risk emerging school thought combat seemingly nonchalant attitude information security enforce consequencedriven work culture aim promote positive cultural change maximising accountability employee caught placing confidential data unencrypted store bring personal wireless point work terminated formal policy discussion bring insight field behavioural economic recent research literature demonstrate pure consequence driven approach solely rely accountability promote risk reduction enterprise employee rational rejecting information security rule clear consequence published enforced introduction basic information security practise employee irrational advertised consequence triggerhappy browsing web download malware corporate laptop complexity policy choose weakest password ignore certificate error accept security warning reading inadvertently expose confidential data social media site clearly specific case malicious intent part unethical employee aware action however scope discussion limited employee malicious intent place enterprise risk rejecting repeated security advice discussion argue purely consequence accountability driven approach influencing behaviour myopic strategy succeed promoting significant risk reduction enterprise argue order influence user promote positive cultural change security related behaviour enforcer comprehend additional variable difference perspective risk individual psychological biase simple behavioural economic perspective end basic risk assessment principle estimate risk business event occur event pose significant risk enterprise collective probability cost individual employee differ realisation variance perspective individual collective set stage discussion psychology economic covered section collective risk nterprise versus individual perspective enterprise number employee follow practise security advice securing laptop work place behaviour contribute probability adverse consequence business amount risk borne individual employee illustration case laptop theft assume situation employer repeatedly warn employee secure laptop cable provided midsized company employee employee follow instruction remaining employee reject advice pose significant risk business probability unsecured laptop stolen annual basis realistic and conservative estimation cost enterprise stolen laptop unencrypted estimated importantly cost based component replacement cost detection forensic data breach implication lost intellectual property lost productivity legal consulting regulatory expense addition measurable cost business loss due brand damage significant conservative guess laptop stolen annually employee bother secure laptop risk enterprise thing individual employee employee risk termination probability individual laptop stolen pool employee follow security mandate low purpose hypothetical discussion purely point variance risk perspective enterprise collective versus individual employee majority situation risk borne business easily comprehended comprehend enterprise risk individual worker share similar perspective risk game theory previously discussed scenario calculation demonstrate variance cost individual versus cost collective enterprise however argued employee job security rely wellbeing enterprise sentiment promote notion employee expected collectively cooperate follow security mandate sense context operative word cooperate test employee action policy good enterprise influenced notice peer doing prisoner dilemma popular game theory problem show people cooperate interest problem extended study cooperation lack thereof individual entity promote common interest example environmental study provided evidence upcoming peril mankind doomed face climate change crisis situation individual country ultimately benefit part promote stable climate future however game theory related experiment deriving prisoner dilemma approach result repeatedly demonstrate individual country agree rationale contribute greater good all unable rationalise individual level part equation extending general finding prisoner dilemma experiment hypothetical scenario presented earlier section individual consciously aware cooperate security mandate fail situation lend phenomenon user follow security requirement freeride notion remaining majority user security advice lowering probability harm wellbeing collective acknowledgement difference perspective risk comprehension cognitive decision making processe assist enforcing security mechanism designed engage active participant end user section build discussion include example psychological economical underpinning work facilitate improvement understanding psychology economic play scope discussion hypothesise individual follow mandate consequence advertised example psychological biase active regard furthermore briefly discuss costbenefit calculation individual make prior deciding invest effort performing requested task example psychology economic make decision position discuss recommendation leverage research field drive adoption information security mandate psychological biase security control designed misguided assumption human rationality void biase contrary human decision consistently psychological biase predictable measurable such discuss example biase activated individual seek comprehend act information security event valence effect valence effect tendency individual overestimate probability positive outcome example experiment equal participant assigned higher probability picking card smiling face reverse side frowning face extending knowledge result repeated experiment performed demonstrate valence effect easy bias influence employee behaviour individual follow security mandate psychological bias promoting idea individual adverse incident similar vein study shown online social media user providing personal information publicly privacy problem user the user dont concerned probability privacy issue face sharing similar information anchoring anchoring cognitive bias describe common human tendency rely heavily anchor trait piece information making decision research shown individual neat website trustworthy privacy security standpoint anchoring bias visual experience correlate website design previously successful transaction easy understand bias individual bypass advice security awareness programme identify steer clear risky situation research psychology uncovered empirical evidence support category biase example biase correlated understand individual fail execute security requirement rational rejection security mandate individual implicitly perform costbenefit calculation deciding execute previously taught security mandate not hypothesis derive work field behavioural economic information security research experiment performed recently coupled comprehension individual perspective psychology understanding individual perform implicit costbenefit decision ultimately organisation create security requirement designed appeal human psyche driving increased adoption people make decision perform task quickly perform calculation ascertain cost performing worth return cost individual bounded term financial harm time effort required addition biase discussed previously user quickly decide total gain security advice worth effort security research experiment data show user reject security advice cost complete security requirement high case phishing website potential stealing corporate data posing legitimate site employee repeatedly taught investigate web browser address bar make browsing legitimate website however wellknown domain name respected institution repeatedly redirect multiple location situation technical ability dissect parse browser address bar distinguish host name domain name path website resource applicable parameter average nontechnical individual burden individual expose corporate data malicious website cost data breach borne corporation case ssl certificate warning displayed webbrowser user instructed cognizant warning indicator ongoing maninthemiddle attack jeopardise corporate information however research shown end user perspective close warning false positive easy probability false positive warning minimum close return effort cost make rational user anchor security advice discussed example psychology decision economic influence decision easy vital variable accounted developing security requirement user adopt execute security mandate make requirement designed appeal human cognition recommendation based investigation psychological perspective costbenefit analysis behavioural economic principle research community gained insight individual reject security mandate situation variable equal accelerating accountability enforcing stricter consequence positively influence behaviour businesse seek positively influence risk posture influencing user promoting positive culture change information security recommendation identify automate security response machine parsed computed relying human decision reevaluate business risk assessment methodology account difference collective individual perspective based risk cost probability discover calculate influence popular psychological biase ascertain employee tendency bypass advertised security requirement detect case security requirement cost rate individual case evaluate promoting risk enterprise redesigning usability altering control psychologically influenced engage leverage psychological biase benefit information security related communication security mandate important fair employee follow instruction put enterprise risk face clear consequence however risk solely depending approach ignore vital variable individual perspective psychology simple behavioural economic information security personnel monitored make solely pushing consequence driven culture make job easier promoting irrational cost security requirement end user guise accountability reference initiating privacy arm race facebook antisocial firefox extension opinion popular expectation eventually privacy unfounded profitable entity business roadmap illustrate feel stage privacy compromised business grow word user battle decision stop facebook accept collaborate communicate platform mine private information compute business intelligence eventual profit fair set option concept social privacy oxymoron social benefit share information ourselve however sort reasoning grounded reality reason disconnecting computer internet gain utmost level security isnt reasonable option for people opinion online social space created condition end user ultimately collaborate initiate ongoing privacy arm race promote sentiment research field announce antisocial project antisocial project subset research neurosploit umbrella more neurosploit later developed firefox extension promote effort hurry download beware initial release provide feedback moment antisocial aim work provide additional privacy control feature preventing external site including content prevent track user browsing habit external via referrer header figure screenshot cnncom prevented embedding figure screenshot firefox error console displaying external site blocked preventing user landing external resource prevent track user browsing habit external via referrer header banning party application including application choose facebook automatic authentication user opportunity authorise execution party application prevent arbitrary party capture data figure screenshot antisocial firefox task bar preventing external site landed capturing fact modifying referrer header more come increase noise signal ratio business intelligence collected social media platform currently facebook research progress changing referrer header browse platform this stop collecting intelligence user browsing habit platform make data mining slightly expensive changing referrer information tracked cookie this stop collecting intelligence user browsing habit platform make data mining slightly expensive initiating arbitrary request platform make harder party computing business intelligence work progress set computation agree more come feel free contact bug report question ideas caveat fan noscript firefox plugin realise all feature set incorporated noscript however antisocial firefox extension aim target user technically savy manoeuvre tool noscript understanding research privacy issue social platform year later droppin malware osx carpet bomb style and some year ago reported safari carpet bomb vulnerability apple apple responded back security vulnerability plan fixing obtaining explicit permission apple security team discuss publicly disclosed attack vector eventually voted top web hacking technique security professional world carpet bomb fixed safari window due pressure microsoft result threat security professional quickly realised impact cross application issue contributed remote command execution possibility window caused microsoft release advisory safari apple eventually fix safari window however year original disclosure carpet bomb vulnerability osx remain unpatched mean safari browser osx malicious entity drop amount binary data file folder caused because sane web browser warn end explicit permission saving file locally safari ahead save file default download location hundred file served malicious website simultaneously technical detail reported year ago follow assume malicious website serve html raising consciousness facebook automatic authorization user repeatedly warned educated comprehend reality party application consume private information such user begun expect fair warning illustrated below include explicit authorization request platformwhen party application accessed image platform requesting authorization prior enabling party application however party application bypass displaying warning explicit authorization request automatic authentication defined automatic authentication mean visit application canvas whether fbml iframebased canvas page pass visitor application authorised application uid passed interact user application tab application data user except user chosen display public listing book hacking generation book hacking generation electronic format physical version amazon book store day mike loukide oreilly accepting proposal working process coauthor billy rios brett hardin writing significant chapter book description advent rich internet application explosion social media increased powerful cloud computing infrastructure generation attacker added cunning technique arsenal involved defending application network system hacking generation book identify variety emerging attack vector valuable information hack attempt exploit technical flaw learn attacker advantage individual social networking site abuse vulnerability wireless technology cloud infrastructure written seasoned internet security professional book help understand motive psychology hacker attack enabling prepare defend them learn inside out technique poke hole protected network understand wave blended threat advantage multiple application vulnerability steal corporate data recognise weaknesse today powerful cloud infrastructure exploited prevent attack mobile workforce device valuable data aware attack social networking site obtain confidential information executive assistant case study show layer vulnerability compromise multinational corporation chapter intelligence gathering peering window organisation successfully execute attack organisation attacker perform reconnaissance gather intelligence organisation possible chapter traditional attack method generation attacker leverage technology information gathering chapter insideout attack attacker insider popular perimeterbased approach security provide risk reduction today fact contributing increased attack surface criminal launch potentially devastating attack impact attack illustrated chapter extremely devastating businesse approach security perimeter mindset insider generally trusted information confidential critical organisation chapter work patch protocol support network communication relied internet work specifically designed security mind chapter study protocol weak attacker continue exploit them chapter blended threat application exploit amount software installed modern computer system staggering software package single machine complexity managing interaction software package increasingly complex complexity friend nextgeneration hacker chapter expose technique pit software software blended threat blended attack gain insight attack executed thought process blended exploitation chapter cloud insecurity sharing cloud enemy cloud computing generation computing benefit cost saving business justification moving cloudbased environment compelling chapter illustrate nextgeneration hacker positioning advantage abuse cloud platform include tangible example vulnerability discovered today popular cloud platform chapter abusing mobile device targeting mobile workforce today workforce mobile army travelling customer making business happen explosion laptop wireless network powerful cell phone coupled get done create perfect storm nextgeneration attacker chapter walk scenarios showing mobile workforce prime target attack chapter infiltrating phishing underground learning online criminal phisher unique bunch nuisance businesse legal authority significant amount damage person financial reputation chapter infiltrate uncover ecosystem shed light advance quest understanding popular subset generation criminal chapter influencing victim you generation attacker target network operating system application attacker target people data hold easier attacker influencing manipulating human invest lot time finding exploiting technical vulnerability chapter crafty technique attacker employ discover information people influence them chapter hacking executive ceo spot targeted attack attacker begin focus attack specific corporate individual executive prime target team member companyfor instance chief executive officer chief financial officer chief operating officer executive higher income bracket potential target information laptop rival information corporation database chapter walk scenarios attacker target executive large corporation chapter case study perspective chapter present scenarios determined hacker crosspollinate vulnerability processe system application compromise businesse steal confidential data blame credit card franchise criminal amazon elastic compute cloud technology enthusiast first information security professional second admire internal complexity external simplicity sheer power offered amazon cloud computing service academic forever fantasised instantonpayperusegridcomputing amazon turn reality advent utility computing progress dwell organising computing infrastructure rather computing granted create great discuss service stand currently abused criminal person bring problem important worthy discussion expose extraordinarily powerful infrastructure hand cybercriminal purpose conversation criminal phishing underground benefit amazon ty back feel root the credit card system invite read interview billy rios titled spy phishing underground gain background characteristic average phisher common tool used criminal communicate trade knowledge order setup phishing site task criminal complete compromise gain obtain bartering server internet phisher unarchive readymade phishingkit html javascript image representing target organisation logo addition server side script responsible collecting post variable emailing static address owned phisher webroot web server running compromised host fully working phishing site typical phishing found targeted organisation customer complaint aid community driving antiphishing effort example phishtank happen isp own address compromised host identified contacted matter hour word timetolive phishing site day hour promote whackamole approach problem criminal setup phishing site fast can organisation targeted locate attempt shut contacting isp goal targeted institution play whackamole game faster phishing site fast shut customer data stolen hand goal phisher play whackamole game harder quickly spawn instance phishing website lure potential victim submitting information timetolive phishing site matter hour interest criminal continue seek faster method spawning instance phishing site amazon ripe platform phisher phisher process follow abuse platform amazon account service single stolen credit card configure virtual instance ami host phishing site spawn instance ami phishing site active default number instance customer allowed create low phisher create amazon account step instance goal collect thousand additional credit card number matter hour amazon notified phishing site terminate account amis problem select credit card hundred thousand captured step back step problem hand extraordinarily powerful infrastructure stolen credit card platform hour stolen credit card initiate vicious cycle impossible halt feel root situation credit institution based weighing lost revenue amount fraud committed decided accept fraud cost instituting secure mechanism biometric factor example higher cost fraud profitable institution make business decision this problem scenario cost fraud due credit card transaction insecure design the creditcard system based static number change borne merchant amazon organisation run business amazon cloud cost figured original business decision disappointing situation business perspective sympathise amazon company offer bleedingedge innovation masse unable alternative creditcard system compromise make difficult legitimate people service glad amazon continue offer platform masse innovation allowed drive forward alway scope writeup technical tactic amazon lower impact probability problem feel free comment discuss however amazon job setting clear channel communication information security researcher administrator easily reach them asked advice organisation noted denial service attack launched way originating amazon cloud space told impossible reach amazon care matter closing interested earlier writeup topic dated value amazon elastic compute cloud initial thought security implication ","m_szGeo1":"","m_szSourceType":"source_news","m_szSrcUrl":"http://www.dhanjani.com/blog/","m_Places":["Most","Tesla","Cory","Hue","Mobile","Teslas","Enter","Ie","Valence"],"m_People":["Cory Doctorow","Elon Musk","George Reese","Lon J. Seidman","Ray Wenderlich","Blackhat Barcelona","Kelly Jackson Higgins","Mike Loukides","Billy Rios","Brett Hardin"],"m_Companies":["Philips","Facebook","Linux","Samsung","Permalink","Spacex","Tesla Motors","Google","Apple","Network Computing Devices","Mar 21 2013 Eu","Eu","Perimeter","Amazon","Path","Revolution","Economic Co","A Wireless","Sync","Target","Cognizant","Ec2","Microsoft","Device Family","“universal”","Signal","Cnn","Universal","Twitter","Skype","Patientslikeme","Guess","Pool","Cnn.com","Underground","Clear Channel"],"m_BiGrams":["ios device","push notification","url scheme","information security","party application","tesla model","ios application","storage apis","iot device","address bar","security mandate","phishing site","security issue","ios app","icloud storage","baby monitor","operating system","abuse case","user icloud","provisioning profile","security implication","server side","security requirement","credit card","malicious entity","malicious website","icloud service","icloud container","provisioning portal","bundle identifier","security vulnerability","attack vector","rest api","iphone ipad","backup restore","data icloud","notification ios","apn certificate","social media","behavioural economic","security advice","psychological biase","social networking","security permalink","party app","internal network","wemo baby","icloud directory","device icloud","bundle seed","icloud data","apple ios","application security","web application","healthcare organisation","end user","case study","philip hue","hue personal","lighting system","door lock","physical security","light bulb","tesla website","tesla rest","tesla owner","party developer","app store","case malicious","security privacy","wemo switch","privacy security","personal wireless","device app","apple icloud","application data","macbook air","security perspective","leverage icloud","app icloud","app bundle","developer account","patient record","feel free","application developer","man middle","posted apple","send push","confidential data","apple security","selfsigned certificate","permalink comment","web browser","current domain","medical data","business intelligence","individual employee","individual perspective","follow security","user browsing"],"m_TriGrams":["icloud storage apis","tesla rest api","wemo baby monitor","send push notification","user browsing habit","philip hue personal","battery mile range","low hanging fruit","address service open","belkin wemo baby","baby monitor wemo","hue personal wireless","ios device icloud","app leverage icloud","doctor macbook air","push notification user","url scheme apple","behavioural economic information","economic information security","follow security mandate","stolen credit card"],"m_SocialTags":[],"m_Topics":[],"m_Industry":[],"m_Technology":[],"m_BiCnt":[22,20,19,17,15,14,14,12,10,10,10,10,9,9,9,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"m_TriCnt":[8,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"m_iDocBodyWordCnt":8970}
